{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","branding","className","to","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","users","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","onEditClick","console","log","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","target","onSubmit","preventDefault","newContact","post","newUser","history","push","EditContact","updateContact","match","params","put","res","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8e923b64.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Header({ branding }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm nav-bar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\">{branding}</Link>\r\n\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/edit/:id\" className=\"nav-link\">\r\n                <i className=\"fas fa-edit\"></i> Edit\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: 'MY APP'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends React.Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const users = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n    this.setState({\r\n      contacts: users.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport { Consumer } from '../../context';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends React.Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = e => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  };\r\n\r\n  onEditClick = () => {\r\n    console.log('test');\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  onClick={this.onShowClick}\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                ></i>\r\n                <Link\r\n                  className=\"fas fa-edit\"\r\n                  style={{\r\n                    cursor: 'pointer',\r\n                    float: 'right',\r\n                    color: 'green',\r\n                    marginRight: '1rem'\r\n                  }}\r\n                  to={`contact/edit/${id}`}\r\n                ></Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\"> Email: {email}</li>\r\n                  <li className=\"list-group-item\"> Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport Contact from './Contact';\r\n\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends React.Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n\r\n          return (\r\n            <>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts ? (\r\n                contacts.map(contact => (\r\n                  <Contact key={contact.id} contact={contact} />\r\n                ))\r\n              ) : (\r\n                <div>loading</div>\r\n              )}\r\n            </>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nexport default function TextInputGroup({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n","import React from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\nexport default class AddContact extends React.Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = { name, email, phone };\r\n\r\n    const newUser = await axios.post(\r\n      `https://jsonplaceholder.typicode.com/users`,\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: newUser.data });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name ...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email ...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone ...\"\r\n                    value={phone}\r\n                    error={errors.phone}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nexport default class EditContact extends React.Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const { name, email, phone } = res.data;\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name ...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email ...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone ...\"\r\n                    value={phone}\r\n                    error={errors.phone}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Edit Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Not Found\r\n      </h1>\r\n      <p className=\"lead\">page does not exists</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from './components/layout/Header';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport { Provider } from './context';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}